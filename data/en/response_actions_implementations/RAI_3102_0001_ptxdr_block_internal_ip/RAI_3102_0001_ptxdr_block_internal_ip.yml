title: Host isolation with PT XDR
id: RAI3102_0001
linked_response_actions: RA3102
description: Host isolation by disabling network adapters using the PT EDR agent
author: '@ERMACK_COMMUNITY'
creation_date: 2022/10/27
modification_date: 2022/10/27
stage: containment
linked_software:
  - S0002
  - S0003
tags:
  - isolate.host
linked_artifacts:
  - A1005
requirements:
  software:
    means_of_action:
    - ID: S0002
      cpe-fs: "cpe:2.3:a:positive_technologies:pt_xdr:1.*:*:*:*:*:*:*:*"
    targets_of_action:
    - ID: S0003
      cpe-fs: 'cpe:2.3:o:microsoft:windows:-:*:*:*:*:*:*:*'
extended_description: |
  ## Basic parameters
  **Action:** `PTEDR_ESC_Respond_Action_KillAdapters`  
  **XDR module:** `esc_host_isolator`  

  ## Windows host isolation
  ### Inquiry
  **Input parameters:**
  - `timeout`: integer parameter in milliseconds. Affects the disconnect time of network adapters  
  - `ip`: string parameter containing the ipv4 of the endpoint on which to perform the action  

  ```json
    {"timeout": 60000, "ip": "10.125.124.7"}
  ```

  Work logic:
  The request to disable adapters is queued, which is monitored once per second. At the next iteration, processing of the request begins: all active network adapters are found and disconnected (described in more detail here EDR, Isolate a device with a wired connection), a task is placed in the queue to restore disconnected network adapters, a pause the size of the transmitted timeout is expected. The next iteration runs the task of enabling previously disabled network adapters.

  ### Answer
  If successful, the user will receive a message:  
  ```json
  {
     "actions": [
         "esc_host_isolator.PTEDR_ESC_Respond_Action_KillAdapters"
     ],
     "status": "success",
     data: {
         "reason": "action_exec_success",
         "timeout": 60000
         "result": true
         "ip": "10.125.124.7"
     }
  }
  ```
  ### Restrictions
  In the case when two or more requests are almost simultaneously queued for processing, the requests will overlap each other. In this case, the adapters will be disabled for the sum of all timeouts. Example: two requests arrived with timeouts of 10 minutes and 1 minute. In total, the adapters will be disabled for 11 minutes.
  The message that we receive in case of success only tells us that the task to disable adapters has successfully entered the task queue. Once the adapters are disabled, we have no way to return anything to the action customer. A possible way to check the success of the action is to manually check the network reachability, for example, by pinging the desired endpoint.
