title: Persistense using Windows Logon Helper
id: RP2008
author: 'Alex@Cyberok'
creation_date: 2023/02/03
modification_date: 2023/02/03
linked_artifacts:
  - A1005
  - A3002
  - A5002
tags:
  - status.stable|(https://example.com)
  - severity.high
  - TLP.amber
  - pap.white|(https://example.com)
  - windows
preparation:
  - RP_1001_operational_preparations
identification:
  - RA_2503_list_registry_keys_accessed
  - RA_2501_list_registry_keys_modified
  - RP_1004_identify_means_of_attack
  - RP_1002_identify_affected_systems_and_users
  - RA_2313_analyse_windows_pe
  - RA_2999_examine_content
containment:
  - RA_3102_block_internal_ip_address
  - RA_3302_quarantine_file_by_hash
eradication:
  - RA_4301_remove_file
  - RA_4501_remove_registry_key
recovery:
  - Recover modification
  - RA_5101_unblock_blocked_ip
lessons_learned:
  - RA_6001_develop_incident_report
  - RA_6002_conduct_lessons_learned_exercise

description: Response playbook for detected persistence using Windows Logon Helper.
extended_description: |
    Registry entries in HKLM\Software{\Wow6432Node\}Microsoft\Windows NT\CurrentVersion\Winlogon and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon are used to manage additional helper programs and functionalities that support Winlogon.
    
    Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse:
        - Winlogon\Notify - points to notification package DLLs that handle Winlogon events
        - Winlogon\Userinit - points to userinit.exe, the user initialization program executed when a user logs on
        - Winlogon\Shell - points to explorer.exe, the system shell executed when a user logs on
        
workflow: |
    *For better triage and response actions result you need to identify and analyze artifacts from use case.*
    
    1. Identify changes to registry persistence keys that are not commonly used or modified by legitimate programs. This could be an indication of an adversaryâ€™s attempt to persist in a stealthy manner.
    2. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.
        - examine content
        - analyse malware file
        
    3. Take any containment action depending on the situation and level of asset's criticality. <br> For example, block potentially malicious software that may be executed through the Winlogon helper process by using application control tools like [AppLocker](https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/applocker/applocker-overview) that are capable of auditing and/or blocking unknown DLLs:
        - block internal ip address
        - quarantine file by hash
    
    4. Take any eradication action depending on the situation and level of asset's criticality. <br> For example, tools such as [Sysinternals Autoruns](https://learn.microsoft.com/en-us/sysinternals/downloads/autoruns) may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values:
        - remove file
        - remove registry key
        
    5. Take recovery action depending on previous containment and eradication actions:
        - recover modification
        - unblock quarantined host
        
    6. Report incident, remove security breaches, conduct lessons learned exercises. 
    
    ## Response discovery mapping
    
    | ARTIFACT                  | RESPONSE ACTION                                                                                | RESPONSE ACTION OBSERVABLES                                                   |
    | ------------------------- | ---------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |
    | [Windows Registry](/artifacts/A_5002_windows_registry/entity)            | [List registry keys accessed]() <br>[List registry keys modified]() <br> [Examine content]() <br>*Look for specific registry hives values* | Malicious file |
    | [File](/artifacts/A_3002_file/entity/)                  | [Identify means of attack]() <br> [Analyse Windows PE file]() <br> *Look for code execution and persistence artifacts* | Code execution artifacts |
    
    *P.S. Artifacts from "Attack Prerequisites" section ( in this case : [Host]() ) should be used in [Operational Preparations]() and as incoming arguments for other response actions, for example*
    <details>
    <summary><b>response action: list registry keys accessed</b></summary>
    ```
    list_registry_keys_accessed (enabled=True, host)
    ```
    </details>
    
    ## Response mindmap diagram
    ![Mindmap](08.svg)
    
    