title: 'WinRM or Powershell Remoting for Lateral Movement'
id: UC0042
author: 'Alex@Cyberok'
creation_date: 2023/02/28
modification_date: 2023/02/28
severity: M
tags:
  - lateral_movement
  - attack.t1021.006
  - windows
linked_response_playbooks:
  - RP2007
linked_artifacts:
  - A4003
  - A5006
description: WinRM or PowerShell remoting for lateral movement.
extended_description: |
    
    WinRM is the name of both a [Windows service]() and a [protocol]() that allows a [user]() to interact with a [remote system]() (e.g., run an executable, modify the Registry, modify services) It may be called with the winrm command or by any number of programs such as [PowerShell](). WinRM can be used as a method of remotely interacting with Windows Management Instrumentation.
    
    Lateral movement combines two techniques: **extraction of confidential**; and **information after gaining access**.
    
    ## Attack mapping
    
    | ARTIFACT                                                                        | OBJECT                   | DESCRIPTION                                                                               |
    |---------------------------------------------------------------------------------|--------------------------|-------------------------------------------------------------------------------------------|
    |  **Attack Prerequisites**                                                       |
    | [Credentials](/artifacts/A_5006_credential/entity)                              | User's credentials (login and password) | It's used as arguments for lateral movent actions    |
    | **Side Observables**                                                            |
    | [Remote Session](/artifacts/A_5011_RPC_network_traffic/entity/)                 | Remote session           | Open remote powershell session via WinRM |
    
    
    ## Attack results
    Successfull attack allows to execute commands on a [remote host]() with [remote session](). 
    
    | RESOURCE                                                              | DESCRIPTION                                                                               |
    |-----------------------------------------------------------------------|-------------------------------------------------------------------------------------------|
    | **Attack Prerequisites**                                              |                                                                                           |
    | [Privileged Access]()                                                 | Compromised host with privileged access |
    | [Credential Access]()                                                 | Any user's credentials |
    | **Result Consequences**                                               |                                                                                           |
    | [Remote Code Execution]()                                             | Attacker gets an ability to execute commands on the remote host |

    ## Attack progress
    1) Attacker establishing a PSRemoting session from a compromised system to a domain controller a-dc01:
    ```
    New-PSSession -ComputerName dc-mantvydas -Credential (Get-Credential)

    Id Name         ComputerName    ComputerType    State         ConfigurationName     Availability
    -- ----         ------------    ------------    -----         -----------------     ------------
    3 WinRM3        a-dc01          RemoteMachine   Opened        Microsoft.PowerShell     Available

    PS C:\Users\mantvydas> Enter-PSSession 3
    [a-dc01]: PS C:\Users\aegorov\Documents> hostname
    ```
    ![WinRM](22.JPG)
    
    2) Note the process ancestry: on the host that initiated the connection, a 4648 logon attempt is logged, showing what process initiated it, the hostname where it connected to and which account was used. 
    
    Additionally, %SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-WinRM%4Operational.evtx on the host that initiated connection to the remote host, logs some interesting data for a task WSMan Session initialize :
    ![Example](29.JPG)
    
    Since we entered into a PS Shell on the remote system (Enter-PSSession) , there is another interesting log showing the establishment of a remote shell - note that the ShellID corresponds to the earlier observed Correlation ActivityID:
    
    ![Example](30.JPG)
    
    ## Possible usage
    
    ### Empire
    For engagements that utilize Empire there is a [PowerShell module](https://www.powershellempire.com/?page_id=126) which can execute code remotely over WinRM in order to expand access inside a network. Requirements for usage of this module are: local administrator credentials, a listener, an agent and a target host.
    ```
    usemodule lateral_movement/invoke_psremoting
    ```
    ![Empire](51.JPG)
    
    Post exploitation commands can be executed on the host that has been compromised through the WinRM service.
    ![Empire1](52.JPG)

    ## Additional Useful Commands
    ```
    # Enable PowerShell Remoting on the target (box needs to be compromised first)
    Enable-PSRemoting -force

    # Check if a given system is listening on WinRM port
    Test-NetConnection <IP> -CommonTCPPort WINRM

    # Trust all hosts:
    Set-Item WSMan:\localhost\Client\TrustedHosts -Value * -Force

    # Check what hosts are trusted
    Get-Item WSMan:\localhost\Client\TrustedHosts

    # Execute command on remote host
    Invoke-Command <host> -Credential $cred -ScriptBlock {Hostname}

    # Interactive session with explicit credentials
    Enter-PSSession <host> -Credential <domain>\<user>

    # Interactive session using Kerberos:
    Enter-PSSession <host> -Authentication Kerberos

    # Upload file to remote session
    Copy-Item -Path C:\Temp\PowerView.ps1 -Destination C:\Temp\ -ToSession (Get-PSSession)

    # Download file from remote session
    Copy-Item -Path C:\Users\Administrator\Desktop\test.txt -Destination C:\Temp\ -FromSession (Get-PSSession)
    ```
    
    ## Attack diagram
    ![Diagram](33.svg)
    
    ## References 
    [MITRE](https://attack.mitre.org/techniques/T1021/006/)
    
    [A look under the hood at Powershell Remoting through a cross plaform lens ](http://www.hurryupandwait.io/blog/a-look-under-the-hood-at-powershell-remoting-through-a-ruby-cross-plaform-lens)
    
    [Pentestlab](https://pentestlab.blog/2018/05/15/lateral-movement-winrm/)
    
    