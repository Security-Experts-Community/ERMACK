title: Wdigest credential access
id: RP2004
author: '@Cyberok'
creation_date: 2023/02/03
modification_date: 2023/02/03
linked_artifacts:
  - A1005
  - A3007
  - A5002
  - A5006
  - A5008
tags:
  - status.stable
  - severity.high
  - tlp.amber
  - pap.white
  - windows
preparation:
  - RP_1001_operational_preparations
identification:
  - RA_2503_list_registry_keys_accessed
  - RA_2501_list_registry_keys_modified
  - RP_1002_identify_affected_systems_and_users
  - RP_1004_identify_means_of_attack
containment:
  - RA_3601_lock_user_account
eradication:
  - RA_4501_remove_registry_key
  - RA_4603_reset_authentication_credentials
  - RA_4601_revoke_authentication_credentials
recovery:
  - RA_5601_unlock_locked_user_account
  - Recover modification
lessons_learned:
  - RA_6001_develop_incident_report
  - RA_6002_conduct_lessons_learned_exercise

description: Response playbook for detected Wdigest credential access.
extended_description: |
   A configuration related to WDigest could hinder the security of your environment, specifically on the endpoint, by allowing an attacker to steal cleartext credentials from memory. There are measures you can take to remediate this and ensure that your endpoints and credentials are more secure. Microsoft’s security update (KB2871997) addresses the issue on older versions of Windows, whereas newer versions should be secured by default.

   Checking the registry on all of your Windows endpoints for the WDigest setting should be a priority, as the loss of credentials could lead to the loss of sensitive information. One way to do this is through command-line queries against all your hosts, but a quicker way is to automate this type of auditing against your endpoint and have the data presented to you in an easy-to-consume report.
workflow: |
    *For better triage and response actions result you need to identify and analyze artifacts from use case.*

    1. Look for windows registry modification commands. Noticed two variations of this command being used, both of which eventually sets the registry value of UseLogonCredential to 1.
    In systems where the WDigest registry is missing or removed.
    ```
    "Set-ItemProperty -Force
    Path 'HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest'
    Name "UseLogonCredential"
    Value '1'"
    ```
    In systems where the WDigest registry is set to not store clear passwords.
    ```
    "reg" add
    HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v
    UseLogonCredential /t REG_DWORD /d 1 /f
    ```
    2. Search for any credential access tool's artifacts. For example, the actor can use rundll32.exe and comsvcs.dll with its built-in MiniDump function to dump passwords from LSASS into a dump file. The command to accomplish this often specifies the output to save the passwords from LSASS. The file name is also reversed to evade detections (ssasl.dmp):
    ```
    powershell.exe" /c Remove-Item -Path C:\windows\temp\ssasl.pmd
    -Force -ErrorAction Ignore;
    rundll32.exe C:\windows\System32\comsvcs.dll,
    MiniDump (Get-Process lsass).id C:\windows\temp\ssasl.pmd full | out-host;
    Compress-Archive C:\windows\temp\ssasl.pmd C:\windows\temp\[name].zip
    ```
    3. Take any containment action depending on the situation and level of asset's criticality. For example, if credential access attempt was successful, it may be reasonable to lock compromised users:
        - Lock user account

    4. Take any eradication action depending on the situation and level of asset's criticality. For example, credential can be used as arguments to malicous commands:
        - Revoke authentication credentials
        - Remove registry key (HKEY_LOCAL_MACHINESystemCurrentControlSetControlSecurityProvidersWDigestUseLogonCredential)

    5. Take recovery action depending on previous containment and eradication actions:
        - Unblock blocked user (if needed)
        - Reset user password
        - Recover modification
    6. Report incident, remove security breaches, conduct lessons learned exercises.

    **NOTE**:  *if WDigest authentication is not being used, customers can apply the FixIt found on the [KB article](https://support.microsoft.com/ru-ru/topic/%D1%81%D0%BE%D0%B2%D0%B5%D1%82%D1%8B-%D0%BA%D0%BE%D1%80%D0%BF%D0%BE%D1%80%D0%B0%D1%86%D0%B8%D0%B8-%D0%BC%D0%B0%D0%B9%D0%BA%D1%80%D0%BE%D1%81%D0%BE%D1%84%D1%82-%D0%BF%D0%BE-%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D0%BE%D0%B1%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B4%D0%BB%D1%8F-%D1%83%D0%BB%D1%83%D1%87%D1%88%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B7%D0%B0%D1%89%D0%B8%D1%82%D1%8B-%D1%83%D1%87%D0%B5%D1%82%D0%BD%D1%8B%D1%85-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D0%B8-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BE%D1%82-13-%D0%BC%D0%B0%D1%8F-2014-%D0%B3-93434251-04ac-b7f3-52aa-9f951c14b649) to disable WDigest. Doing this will eliminate all cleartext credentials from LSASS memory.*
    The easiest way to do this would be through group policy, but a quick script also works:
    ```
    reg add
    HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v
    UseLogonCredential /t REG_DWORD /d 0
    ```
    Once you’ve pushed the security update, and the registry key update to all of your servers, you can ensure you’ve done it successfully by querying the registry to see that it exists and is not set to 1.
    ```
    reg query
    HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v
    UseLogonCredential
    ```

    ## Response discovery mapping

    | ARTIFACT                  | RESPONSE ACTION                                                                                | RESPONSE ACTION OBSERVABLES                                                   |
    | ------------------------- | ---------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |
    | [Windows Registry](/artifacts/A_5002_windows_registry/entity)                   | [List registry key accessed]() <br>[List registry key modified]() <br> *Look for reg add/(or delete and create) commands* | Credential dump attempt artifact <br> *Examine under what user's context modification has been done* |
    | [Process](/artifacts/A_4001_process/entity) | [Identify means of attack]() <br>*Search for possible tools artifacts to define fact of credential dump* | Identified credential dump tool |
    | [Login Session](A_5005_encrypted_credential/entity/) | [Identify affected systems and users]() <br>*Look for user's logon on compomised host* | Compomised password |
    | [Encrypted Credential](/artifacts/A_5005_encrypted_credential/entity/)                     | [Revoke authentication credentials]() <br> *If credential access is confirmed* | Restrict credential usage  |
    | [Password](/artifacts/A_5008_password/entity/) | [Reset password]() <br>*Depends on needed context.* | New password |


    *P.S. Artifacts from "Attack Prerequisites" section ( in this case : [Host]() ) should be used in [Operational Preparations]() and as incoming arguments for other response actions, for example*
    <details>
    <summary><b>response action: list registry keys accessed</b></summary>
    ```
    list_registry_keys_accessed (enabled=True, host)
    ```
    </details>

    ## Response mindmap diagram
    ![Mindmap](04.svg)
